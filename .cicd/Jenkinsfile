def canDeployProduction = false
pipeline {
    agent any

    environment {
        PROJECT_NAME = 'api-thetiptop'
        BUILD_IMAGE_NAME = "build/${PROJECT_NAME}-${env.BRANCH_NAME}".toLowerCase()
    }
    stages {

        stage('Build') {
            steps {
                echo 'Building ...'
                script {
                    // prepare execution image
                    BUILD_IMAGE = docker.build(BUILD_IMAGE_NAME, '-f Dockerfile.test .')
                    // Build project - check syntax error ...
                    BUILD_IMAGE.inside{
                        sh 'mvn clean compile'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                echo ' Unit Testing ...'
            }
        }

        stage('Qality control') {
            steps {
                echo 'Qality control ...'  
            }
        }


        stage('Deploy Approval') {
            steps {
                echo 'Deploy Approval ...'  
            }
        }

        stage('Build image') {
            steps {
                echo 'Build image to Deploy ...'  
            }
        }
        stage('Push Image') {
            steps {
                echo 'Push image to Deploy ...'  
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploy ...'  
            }
        }
    }
    post {
        always {
            echo 'This will always run'
            cleanWs()
            dir("${env.WORKSPACE}@tmp") {
                deleteDir()
            }
            dir("${env.WORKSPACE}@script") {
                deleteDir()
            }
            dir("${env.WORKSPACE}@script@tmp") {
                deleteDir()
            }
        }

        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}
